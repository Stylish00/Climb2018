// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.



#include "../Robot.h"
#include "Climb.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Climb::Climb() : frc::Subsystem("Climb") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    dSole = RobotMap::climbDSole;
    compressor1 = RobotMap::climbCompressor1;
    dSole2 = RobotMap::climbDSole2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void Climb::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Climb::Periodic() {
    // Put code here to be run every loop

}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void Climb::Switch1(){
	if (dSole->Get()==frc::DoubleSolenoid::Value::kForward){
		dSole->Set(frc::DoubleSolenoid::Value::kReverse);
	}else{
		dSole->Set(frc::DoubleSolenoid::Value::kForward);
	}
}
void Climb::Switch2(){
	if (dSole2->Get()==frc::DoubleSolenoid::Value::kForward){
		dSole2->Set(frc::DoubleSolenoid::Value::kReverse);
	}else{
		dSole2->Set(frc::DoubleSolenoid::Value::kForward);
	}
}
