// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "Robot.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<frc::DoubleSolenoid> RobotMap::climbDSole;
std::shared_ptr<frc::Compressor> RobotMap::climbCompressor1;
std::shared_ptr<frc::DoubleSolenoid> RobotMap::climbDSole2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    frc::LiveWindow *lw = frc::LiveWindow::GetInstance();

    climbDSole.reset(new frc::DoubleSolenoid(0, 2, 3));
    lw->AddActuator("Climb", "DSole", climbDSole);
    
    climbCompressor1.reset(new frc::Compressor(0));
    lw->AddActuator("Climb", "Compressor 1", climbCompressor1);
    
    climbDSole2.reset(new frc::DoubleSolenoid(0, 4, 5));
    lw->AddActuator("Climb", "DSole2", climbDSole2);
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
